<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhoABaAPf4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AICAgJeXl7Ozs7a2tunp6fj4+P//
        /yH/C05FVFNDQVBFMi4wAwEAAAAh+QQFCgD4ACwAAAAAoABaAAAI/wD/CRxIsKDBgwgTKlzIsKHDhxAj
        SpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTqlzJsqXLlzBjypxJs6bNmzhz6tzJs6fPn0CDCh1KtKjR
        o0iTKl3KtKlTkP789ZvaT2DUq0+DSqXK1erVr/6y6tzKtes/sGjF1iRb1izat2pjtp1b9ezbtHFZsqVL
        1etdsHlV7uU71e9fwIFPEm5r+DDWxCP7hR3Mt7Hjf4Uhf+y3j9/kxX3tOo6KOV++upo3+uO3r/PnxWFF
        X+5n2nTs1BlZt3Z9di5phH9L1863D3dGzrtbe+5N9fbCtLSHm0ZtnKLu5Ly3SsQaXXo+fdUrIv/Hrtw5
        xe7e8/ELP/E6ed4V/aUfDp49xPHvO2PcN782dfsLuUfeehjJ1x9xADqU327/iXdgPgkyhN+AHOlzYIMR
        EjQhdhhWxM+BBGZ4kIDYmXeRgfMVJ+KIC4a4kYXz6WOiiKst2KFF/PU3Y4Y15nejhxeuKOSQRN4Hokcf
        9vcjgCim56JGOc63Y4Ywpldfhf1dWWSU6U05UZPeqVjkP0nO9+RFZTo5pkDoeaclRlWmt2SCYHo3p0Nt
        eudlhly6uWdD/sQZ5poD5SmdmBX1aSehAwmqp0V1Svfmmmku+idCVRla25lrOvpdpsRdOpA//IFqJaMF
        GWrqp3hWmamjdwqc2eeqtemz3EGrwSpcbYiiapWru1qpH5n7eOpfsKIOGR2tBwr04LHL+oops83+8yy0
        sRKq6XzOXjudtBJ6a1q33maL6rbekfusub6Seq26/e2TLLhsGlsbvG6yS2+h9uJbq777pqoohNaGCXDA
        mLKmj4Xd6tOZZPMi/JBUbEYs8cUYZ6zxxhx37PHHIIcs8sgkl2zyySinrPLK4AYEACH5BAUKAPgALDYA
        EwA1ABkAAAj/APEJHEiwIMF+/fgp5Cewn8GHECNKxJeQ376LFxk2RMhxokeJCTGK3KeRIseTH1M2tDhS
        ZMmTMB2qlMiypcuBMWPOfFjTJsaXOWHuxNnTZ0acQYUOxVfUKNCkHZcyNXpzI1SZ+Pz5+5gv38CmLZ8m
        HajV37+JXbvKBHsUq1WdAstqlbgvbdevI/m5hag0q9y5EO2mxUty70SEZP9qPWtQn+DBAhVKFfhPcVmD
        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
        BQQAOw==
</value>
  </data>
</root>